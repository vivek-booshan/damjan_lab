* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v3.7 on Oct, 27. 2023. JOBID=9843992610
* GENERATES ION CONFORMATION USING MONTE-CARLO SIMULATION
*

DIMENS CHSIZE 5000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

define PROT sele none end

!Read the system information
stream step3_size.str
stream step4_components.str
if islconj .eq. YES stream step3_lipid_conjugate.str

! Read Lipids
open read unit 10 card name step4_lipid_lipid.psf
read psf  unit 10 card append

open read unit 10 card name step4_lipid_lipid.crd
read coor unit 10 card append

! Write coordinates
open write unit 10 card name step4.3_ion_protmemb.crd
write coor unit 10 card

define LPSION sele none end

!
! conc    : concentration (M)
! volumn  : ion accessible volume (Ang**3)
! npos    : number of positive ions
! nneg    : number of negative ions
! nion    : number of positive and negative ions of a particular compound
! npostot : total number of all positive ions
! nnegtot : total number of all negative ions
! niontot : total number of all ions
!

set zmemb =  20.0           ! ion exclusion membrane region

! protein volume, calculation with a grid spacing of 0.5
coor stat

calc dcel = 0.5
calc xdim = int ( ( ?xmax - ?xmin + 5.0 ) / @dcel ) + 1
calc ydim = int ( ( ?ymax - ?ymin + 5.0 ) / @dcel ) + 1
calc zdim = int ( ( ?zmax - ?zmin + 5.0 ) / @dcel ) + 1
calc space = @xdim * @ydim * @zdim

! prevent overflow on integer conversion
calc maxint = 2**32 / 2 - 1
if space .gt. @maxint calc space = @maxint

scalar wmain = radius
scalar wmain add 1.4    ! use solvent accessible surface for molecular volume
scalar 1 = wmain
scalar 2 set 6.0
coor volume hole space @space sele .not. resname TIP3 end

set sysvol = ?volume

IF BOXTYPE .ne. HEXA then
   calc volumn = ( @A * @B * @C ) - @sysvol
ENDIF

IF BOXTYPE .eq. HEXA THEN
   calc A = @A / cos ( 30.0 * ?pi / 180.0 )
   calc B = @B / cos ( 30.0 * ?pi / 180.0 )
   calc C = @C
   calc volumn = ( 3 / 8 * sqrt(3) * @A * @B * @C ) - @sysvol
ENDIF

if @?nlipaion  .eq. 0 set nlipaion  = 0
if @?ncoreion  .eq. 0 set ncoreion  = 0
if @?noantiion .eq. 0 set noantiion = 0

calc npostot = @nlipaion + @ncoreion + @noantiion
calc nnegtot = 0
calc niontot = @npostot

define ALLIONS sele none end

set ionind = 1
label do_ion
    define POS sele none end
    define NEG sele none end

    stream step2.2_ions_count.str @ionind

    calc ncharge = int( ?cgtot )
    calc cgtot = ?cgtot

    calc npos = 0
    calc nneg = 0
    if neutral_index .eq. @ionind then
        if ncharge .lt. 0 calc npos = int( abs( @cgtot ) / @poscharge )
        if ncharge .gt. 0 calc nneg = int( abs( @cgtot ) / @negcharge )
    endif

    calc diff   = int ( @cgtot + @npos*@poscharge - @nneg*@negcharge )

    if neutral_index .eq. @ionind then
        set ntries = 0
        label neutral
            if diff .gt. 0 calc nneg = @nneg + 1
            if diff .lt. 0 calc npos = @npos + 1
            calc diff   = int ( @cgtot + @npos*@poscharge - @nneg*@negcharge )
            incr ntries
            if ntries .ge. 10 stop ! ABNORMAL TERMINATION: can't neutralize this system
            if diff .ne. 0 goto neutral
    endif

    calc npos = @npos + int ( @conc * 6.021 * 0.0001 * @volumn ) * @negval
    calc nneg = @nneg + int ( @conc * 6.021 * 0.0001 * @volumn ) * @posval

    if npos .lt. 0 stop ! ABNORMAL TERMINATION: something wrong
    if nneg .lt. 0 stop ! ABNORMAL TERMINATION: something wrong

    !
    ! Randomly place the ions
    !

    ! Generate positive ion
    if npos .gt. 0 then
        if isusercation .eq. 1 then
            set append
            define JUNK sele all end
            if ?nsel .gt. 0 set append = append

            set nresi = 0
            label readpos
                read psf  card name uploaded_files/@pos.psf @append
                read coor card name uploaded_files/@pos.crd @append

                rename segid TEMP sele .not. JUNK .and. .not. segid POS end

                if nresi .eq. 0 rename segid POS sele segid TEMP end
                if nresi .gt. 0 join POS TEMP

                set append = append
                incr nresi

                if nresi .lt. @npos goto readpos
                join POS renumber
        else
            read sequence @pos @npos
            generate POS warn
        endif

        define POS sele segid POS end

        if natompos .gt. 1 then
            if isusercation .eq. 0 then
                ! copy coordinates to all uninitialized POS
                read coor card name ion_coor/@pos.crd append
                define SOURCE sele POS .and. INIT end
                label duplpos
                    coor dupl sele SOURCE end sele POS .and. .not. INIT end
                    if ?nsel .gt. 0 goto duplpos
            endif

            ! get a translation vector using center of geometry of POS
            coor stat sele POS end
            calc xtran = -?xave
            calc ytran = -?yave
            calc ztran = -?zave

            ! move center of geometry to origin
            coor trans xdir @xtran ydir @ytran zdir @ztran sele POS end
        else
            ! move ion to origin
            coor set sele POS end
        endif
    endif

    ! Generate negative ion
    if nneg .gt. 0 then
        if isuseranion .eq. 1 then
            set append
            define JUNK sele all end
            if ?nsel .gt. 0 set append = append

            set nresi = 0
            label readneg
                read psf  card name uploaded_files/@neg.psf @append
                read coor card name uploaded_files/@neg.crd @append

                rename segid TEMP sele .not. JUNK .and. .not. segid NEG end

                if nresi .eq. 0 rename segid NEG sele segid TEMP end
                if nresi .gt. 0 join NEG TEMP

                set append = append
                incr nresi

                if nresi .lt. @nneg goto readneg
                join NEG renumber
        else
            read sequence @neg @nneg
            generate NEG warn
        endif

        define NEG sele segid NEG end

        if natomneg .gt. 1 then
            if isuseranion .eq. 0 then
                ! copy coordinates to all uninitialized NEG
                read coor card name ion_coor/@neg.crd append
                define SOURCE sele NEG .and. INIT end
                label duplneg
                    coor dupl sele SOURCE end sele NEG .and. .not. INIT end
                    if ?nsel .gt. 0 goto duplneg
            endif

            ! get a translation vector using center of geometry of NEG
            coor stat sele NEG end
            calc xtran = -?xave
            calc ytran = -?yave
            calc ztran = -?zave

            ! move center of geometry to origin
            coor trans xdir @xtran ydir @ytran zdir @ztran sele NEG end
        else
            ! move ion to origin
            coor set sele NEG end
        endif
    endif

    define IONS sele POS .or. NEG end
    define ALLIONS sele segid IONS .or. IONS end

    calc nion = @npos + @nneg

    incr npostot by @npos
    incr nnegtot by @nneg
    incr niontot by @nion

    if nion .eq. 0 goto continue
    !
    !Images Setup [to place all atoms inside the box]
    !

    open read unit 10 card name crystal_image.str
    CRYSTAL DEFINE @XTLtype @A @B @C @alpha @beta @gamma
    CRYSTAL READ UNIT 10 CARD

    !Image centering by residue
    IMAGE BYRES XCEN 0.0 YCEN 0.0 ZCEN @zcen

    update image inbf 0

    CONS FIX SELE .NOT. ( POS .OR. NEG ) END
    SKIP ALL EXCL VDW ELEC
    scalar wmain = charge

    !
    ! Initial placement of ions
    !

    calc cntrand = 0

    calc i   = 1
    label doinit

        calc cntrand = @cntrand + 1
        if cntrand .gt. 100 stop ! ABNORMAL TERMINATION: ion placing may not work.. stop here

        calc j = @i
        set ion = POS

        if j .gt. @npos then
           set ion = NEG
           calc j  = @j - @npos
        endif

        define target select segid @ion .and. resid @j end

        calc xpos = @A * ( ?random - 0.5 )
        calc ypos = @B * ( ?random - 0.5 )
        calc zpos = @C * ( ?random - 0.5 ) + @zcen

        if zpos .gt. -15 if zpos .lt. 15 goto doinit

        ! move target to selected position
        coor stat select target end
        calc xtran = @xpos - ?xave
        calc ytran = @ypos - ?yave
        calc ztran = @zpos - ?zave
        coor trans xdir @xtran ydir @ytran zdir @ztran select target end

        ! apply a random rotation along XYZ
        calc xphi = ?random * 360.0
        calc yphi = ?random * 360.0
        calc zphi = ?random * 360.0
        coor rotate xcen @xpos ycen @ypos zcen @zpos xdir 1.0 -
            phi @xphi select target end
        coor rotate xcen @xpos ycen @ypos zcen @zpos ydir 1.0 -
            phi @yphi select target end
        coor rotate xcen @xpos ycen @ypos zcen @zpos zdir 1.0 -
            phi @zphi select target end


        calc dcut = 3.5

        coor stat sele target end
        calc xmax = ?xmax + @dcut
        calc ymax = ?ymax + @dcut
        calc zmax = ?zmax + @dcut
        calc xmin = ?xmin - @dcut
        calc ymin = ?ymin - @dcut
        calc zmin = ?zmin - @dcut

        define JUNK sele .not. target .and. -
                         prop X .lt. @xmax .and. prop X .gt. @xmin .and. -
                         prop Y .lt. @ymax .and. prop Y .gt. @ymin .and. -
                         prop Z .lt. @zmax .and. prop Z .gt. @zmin  end

        ! check if the ions are too close to protein
        define XXX sele PROT end
        if ?nsel .gt. 0 then
            coor dist cut 10.0 sele target end -
                               sele PROT .and. JUNK .and. .not. hydrogen end image
            if ?npair .gt. 0 goto doinit
        endif

        ! check if the ions are too close to solute
        coor dist cut 4.0 sele target end sele JUNK .and. .not. hydrogen end image
        if ?npair .gt. 0 goto doinit

        calc cntrand = 0
        increase i by 1
        if i .le. @nion goto doinit

    label continue

    CRYSTAL FREE

    ! get the number of @pos residues to reorder
    define JUNK sele ( segid IONS .or. LPSION ) .and. resname @pos end
    set natoms = ?nsel
    calc nresi = @natoms / @natompos
    incr npos by @nresi

    ! join POS to @pos via reordering
    if nresi .gt. 0 then
        ! write the atoms to reorder
        define REORDER sele JUNK .or. segid POS end
        write coor card name temp.crd sele REORDER end

        ! reorder PSF atoms
        dele atoms sele REORDER end
        read sequ @pos @npos
        generate POS warn
        read coor ignore name temp.crd append
    endif

    ! update LPS selection
    define LPSION sele segid LION .or. segid CION .or. segid OION end

    ! get the number of @neg residues to reorder
    define JUNK sele ( segid IONS .or. LPSION ) .and. resname @neg end
    set natoms = ?nsel
    calc nresi = @natoms / @natomneg
    incr nneg by @nresi

    ! join NEG to @neg via reordering
    if nresi .gt. 0 then
        ! write the atoms to reorder
        define REORDER sele JUNK .or. segid NEG end
        write coor card name temp.crd sele REORDER end

        ! reorder PSF atoms
        dele atoms sele REORDER end
        read sequ @neg @nneg
        generate NEG warn
        read coor ignore name temp.crd append
    else
        ! if POS was reordered, NEG may still need to be reordered
        define POS sele segid POS end
        set posat = ?selatom

        define NEG sele segid NEG end
        set negat = ?selatom

        if negat .eq. 0 goto skipreorder

        if posat .gt. @negat then
            write coor card name temp.crd sele NEG end
            dele atoms sele NEG end
            read sequ @neg @nneg
            generate NEG warn
            read coor ignore name temp.crd append
        endif
    endif

    label skipreorder

    ! update LPS selection
    define LPSION sele segid LION .or. segid CION .or. segid OION end

    !
    ! join everything to IONS segment
    !
    define IONS sele segid IONS end
    set nionatoms = ?nsel

    define POS sele segid POS end
    set nposatoms = ?nsel

    define NEG sele segid NEG end
    set nnegatoms = ?nsel

    if nionatoms .gt. 0 then
        if nposatoms .gt. 0 join IONS POS renumber
    else
        rename segid IONS sele segid POS end
    endif

    define IONS sele segid IONS end
    set nionatoms = ?nsel

    if nionatoms .gt. 0 then
        if nnegatoms .gt. 0 join IONS NEG renumber
    else
        rename segid IONS sele segid NEG end
    endif

    incr ionind
    if ionind le @niontypes goto do_ion


CRYSTAL FREE

open read unit 10 card name step4.3_ion_protmemb.crd
read coor unit 10 card

write coor pdb name step4.3_ion.pdb

calc cgtotinit = ?cgtot
calc cgtot = int( ?cgtot )
if cgtot .ne. 0 stop ! ABNORMAL TERMINATION: failure to neutralize system
calc cgdiff = abs(@cgtot - @cgtotinit)
if cgdiff .gt. 0.0001 stop ! ABNORMAL TERMINATION: failure to neutralize system

delete atom sele .not. ( segid IONS ) end

bomlev 2 ! force error if no atoms written

write psf  card name step4.3_ion.psf
write coor card name step4.3_ion.crd

write title card name step4.3_ion.str
* set niontypes = @niontypes
* set npostot = @npostot
* set nnegtot = @nnegtot
* set niontot = @niontot
*

stop
